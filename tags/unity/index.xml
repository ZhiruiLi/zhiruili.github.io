<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Unity on 简单易懂的现代魔法 - Zhirui Li</title><link>https://zhiruili.github.io/tags/unity/</link><description>Recent content in Unity on 简单易懂的现代魔法 - Zhirui Li</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Wed, 01 Sep 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://zhiruili.github.io/tags/unity/index.xml" rel="self" type="application/rss+xml"/><item><title>Unity 和 Android 模块交互</title><link>https://zhiruili.github.io/posts/unity_with_android/</link><pubDate>Wed, 01 Sep 2021 00:00:00 +0000</pubDate><guid>https://zhiruili.github.io/posts/unity_with_android/</guid><description>有时候，我们需要在 Unity 里调用一些 Android 的功能，这些功能在 Unity 中可能并没有提供接口，需要在 Android 平台上实现。此时，我们需要有一个方法来让 Android 代码和 Unity 代码互交互。这里记录一下操作方法，并提供一个工具来简化这个过程。
示例工程 下面的记录可以参考示例工程。其中，根目录是 Unity 工程，可以直接用 Unity 打开。根目录下的 AndroidSample 子目录是 Android 工程，可以用 Android Studio 打开。运行后如下图左所示，点击其中的按钮，就会触发 Unity 到 Anrdoid 的调用，在主界面上产生一个 toast，同时，触发一次从 Anrdoid 到 Unity 的调用，主界面上的 text 变为「Hello From Android」：
具体操作方式 新建一个 Android 工程 这里随便用 Android Studio 建立一个工程就行了。建立好工程后，参考官方文档在工程里添加一个自定义的模块：
菜单栏点击 「File」-「New」-「New Module&amp;hellip;」 弹出窗口中左侧选「Android Library」 右侧填入相关信息后创建模块 假设创建的模块名为「mod」会在工程根目录下新增一个名为 mod 的目录。此时可以删除工程根目录中默认创建的 app 目录，并将工程根目录中 settings.gradle 文件里的 include ':app' 这一行删除。
添加 Unity jar 依赖 为了在 Android 中和 Unity 互交互，我们需要引入 Unity 提供的库，这个库以 jar 包的形式提供。以下目录中都有这个 classes.</description></item></channel></rss>